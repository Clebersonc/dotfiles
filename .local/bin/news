#!/bin/python

from dynmen import Menu
import click
import feedparser
from colorama import Fore, Style
import subprocess as sp
import re
import csv
import datetime
from os import getenv, path
from dateutil import parser, tz

bright = Fore.WHITE
reset = Style.NORMAL + Fore.RESET
cyan = Fore.LIGHTBLACK_EX


def getfile(rss=dict()):

    path_file = 'Documents/sources/websiterss.csv'
    podcast_file = path.join(getenv('HOME'), path_file)

    with open(podcast_file, 'r') as pod_file:

        for row in csv.reader(pod_file, skipinitialspace=True):
                name, url = [s.strip() for s in row]
                rss[name] = url

    return rss


def checkdate(pub, days_ago):

    timezone = re.compile('(EDT|GMT|EST)')
    d = datetime.datetime.now() - datetime.timedelta(days=days_ago)
    date = d.replace(tzinfo=None)
    if re.findall(timezone, pub):
        dt = parser.parse(' '.join(pub.split()[:-1]))
    else:
        dt = parser.parse(pub)
    dt = dt.replace(tzinfo=None)

    return dt > date


def getnews(url, days_ago, number, links=[], i=0, color=bright):

    for news in feedparser.parse(url).entries[:number]:

        if checkdate(news.published, days_ago):
            links.append(news.link)
            n = str(i+1) if i > 8 else "0" + str(i+1)
            color = bright if color != bright else reset
            title = re.sub('\n', '', news.title)
            print(cyan + '   ' + n + ' ' + color + title + reset)
            i += 1
        else:
            break


@click.command()
@click.option('-f', '--fuzz', is_flag=True,
              help="fuzzi find podcast.")
@click.option('-n', '--normal', is_flag=True,
              help="Show the normal page.")
@click.option('-d', '--days-ago', 'days', default=1,
              help="How much days ago to get podcast.")
@click.option('-n', '--number', default=-1,
              help="How much entries to get.")
def play(fuzz, days, normal, number):

    rss = getfile()
    links = []

    if fuzz:
        menu = Menu(['fzf', '--prompt=Feed:'])
        search = ' '.join([menu(rss).selected])
        getnews(rss[search], days, number, links)
    else:
        for name, url in rss.items():
            print('\n    # ' + name.upper())
            print('    ' + '--'*10)

            getnews(url, days, number, links, len(links))

    answer = input('\n Select article to read: ')

    print()
    i = 0
    with click.progressbar(length=len(answer.split())*2, label='Opening feeds') as bar:
        for a in answer.split():
            sp.run(['sleep', '1'])
            bar.update(i+1)
            sp.run(['sleep', '2'])
            if normal:
                sp.run(['qutebrowser', links[int(a)-1]], stdout=sp.PIPE,
                         stderr=sp.DEVNULL, universal_newlines=True)
            else:
                sp.run(['readability', links[int(a)-1]], stdout=sp.PIPE,
                         stderr=sp.DEVNULL, universal_newlines=True)
            bar.update(i+1)


if __name__ == "__main__":
    play()
