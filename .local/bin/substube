#!/bin/bash
function sub_youtube () {
	local name=$1
	local channel="https://www.youtube.com/channel/$2/videos"
	local last=$3
	local url=$(curl $channel)
	local video=$(echo "$url" | grep yt-lockup-title | sed -n 1p | sed 's/.*title="//g' | sed 's/"  aria.*//g')
	local current=$(echo "$video" | sed 's/ /_/g')
	local url_download=$(echo "$url" | grep yt-lockup-title | sed -n 1p | sed 's/.*href="//g' | sed 's/" rel=.*//g')
	local is_livestream=$(curl "https://www.youtube.com$url_download" | grep LIVESTREAMING)

	if [ "$url_download" == '' ] || [ "$name" == '#' ] || [ -z "$name" ] || [ "$is_livestream" != '' ]; then
		return 0
	fi

	if [[ "$last" != "$current" ]]; then
		~/.local/bin/rpl $last $current ~/Videos/subscriptions.txt
		if [[ $4 == "subs" ]]; then
			youtube-dl -f 18 --embed-sub --write-sub --write-auto-sub --quiet "https://www.youtube.com$url_download" &
			sleep 10
			if [ `ls -1 ~/Videos/*.vtt 2>/dev/null | wc -l ` -gt 0 ]; then
				for f in ~/Videos/*.vtt
				do
					$(ffmpeg -i "$f" "${f%.vtt}.srt")
				done
				rm ~/Videos/*.vtt
				for f in ~/Videos/*.srt
				do
					$(awk '!a[$0]++' "$f" | sponge "$f")
					$(ffmpeg -i "$f" "${f%.srt}.vtt")
				done
				rm ~/Videos/*.srt
			fi
		else
			youtube-dl -f 18 "https://www.youtube.com$url_download"
		fi

		DISPLAY=:0 DBUS_SESSION_BUS_ADDRESS=unix:path=/run/user/1000/bus notify-send -t 0 "New Video" "Watch <b>$video</b> from <i>$name</i>."
	fi
}

while read -r name channel last subs
do
	sub_youtube $name $channel $last $subs
done < "$HOME/Videos/subscriptions.txt"
