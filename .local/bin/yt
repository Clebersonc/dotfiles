#!/bin/python

import re
import click
import requests
import subprocess as sp
from bs4 import BeautifulSoup as bs


def selection(videos):
    color = 'blue'
    print()
    for i, v in enumerate(videos):
        n = str(i+1) if i > 8 else "0" + str(i+1)
        color = 'blue' if color == 'green' else 'green'
        click.secho(n + "\t" + v[0], fg=color)

    return int(input('\nselect by number: '))


def geturl(search, playlist):
    search = ' '.join(search)
    search = re.sub(' ', '+', search)
    plink = '' if playlist is False else '&sp=EgIQAw%253D%253D'
    url = 'https://www.youtube.com/results?q=' + search + plink

    html = requests.get(url)
    htmlp = bs(html.content, 'html.parser')
    tags = htmlp.findAll('div', class_='yt-lockup-content')

    videos = list()
    for t in tags:
        videos.append((t.find('a').attrs['title'], t.find('a').attrs['href']))

    video = selection(videos)
    vlink = videos[video-1][1]
    if re.search('list', vlink): playlist = True
    href = vlink.split('=')[-1]
    urltype = '/watch?v=' if playlist is False else '/playlist?list='
    vurl = 'https://www.youtube.com' + urltype + href
    return vurl


@click.command()
@click.argument('search', nargs=-1)
@click.option('-a', '--only-audio', 'audio', is_flag=True,
              help="Play only audio.")
@click.option('-p', '--playlist', is_flag=True,
              help="Search for playlists.")
@click.option('-s', '--shuffle', is_flag=True,
              help="Shuffle playlist.")
@click.option('-d', '--debug', is_flag=True,
              help="Debug mode.")
@click.option('-f', '--format', default='18',
              help="Format video type.")
@click.option('-F', '--all-formats', 'list', is_flag=True,
              help="List all formats.")
@click.option('-b', '--best-quality', 'best', is_flag=True,
              help="Automatic select the best video quality.")
@click.option('-d', '--download', is_flag=True,
              help="Download video.")
def search(search, audio, playlist, shuffle, debug, format, list, best, download):
    """ Simple cli for search videos. """

    url = geturl(search, playlist)
    if audio:
        format = '140'
    elif best:
        format = 'bestvideo[ext=mp4][height<=?1080][fps<=30]+bestaudio[ext=m4a]'
    shuffle = '' if shuffle is False else '--shuffle'
    debug = '' if debug is True else '--no-terminal'

    if list:
        sp.run(['youtube-dl', '-F', url])
    if download:
        sp.run(['youtube-dl', '-f', format, url])
    else:
        sp.Popen(['mpv', '--ytdl-format', format, debug, url, shuffle])


if __name__ == '__main__':
    search()
